<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="37137" started-at="2022-01-02T16:00:46 IST" finished-at="2022-01-02T16:01:23 IST">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@fe18270]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="37137" started-at="2022-01-02T16:00:46 IST" finished-at="2022-01-02T16:01:23 IST">
      <class name="runner.CucumberRunner">
        <test-method status="PASS" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.CucumberRunner@fe18270]" name="setUpClass" is-config="true" duration-ms="1700" started-at="2022-01-02T16:00:46 IST" finished-at="2022-01-02T16:00:47 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@69d23296]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="before()[pri:0, instance:runner.CucumberRunner@fe18270]" name="before" is-config="true" duration-ms="9958" started-at="2022-01-02T16:00:47 IST" finished-at="2022-01-02T16:00:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@fe18270]" name="runScenario" duration-ms="1732" started-at="2022-01-02T16:00:57 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-02T16:00:59 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login using valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Login functionality of leaftaps application]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="after()[pri:0, instance:runner.CucumberRunner@fe18270]" name="after" is-config="true" duration-ms="622" started-at="2022-01-02T16:00:59 IST" finished-at="2022-01-02T16:01:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:runner.CucumberRunner@fe18270]" name="before" is-config="true" duration-ms="4511" started-at="2022-01-02T16:01:00 IST" finished-at="2022-01-02T16:01:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@fe18270]" name="runScenario" duration-ms="1060" started-at="2022-01-02T16:01:04 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-02T16:01:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login using invalid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Login functionality of leaftaps application]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="after()[pri:0, instance:runner.CucumberRunner@fe18270]" name="after" is-config="true" duration-ms="606" started-at="2022-01-02T16:01:05 IST" finished-at="2022-01-02T16:01:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:runner.CucumberRunner@fe18270]" name="before" is-config="true" duration-ms="4816" started-at="2022-01-02T16:01:06 IST" finished-at="2022-01-02T16:01:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@fe18270]" name="runScenario" duration-ms="1197" started-at="2022-01-02T16:01:11 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-02T16:01:12 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login using valid credentials multiple data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Login functionality of leaftaps application]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="after()[pri:0, instance:runner.CucumberRunner@fe18270]" name="after" is-config="true" duration-ms="485" started-at="2022-01-02T16:01:12 IST" finished-at="2022-01-02T16:01:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="before()[pri:0, instance:runner.CucumberRunner@fe18270]" name="before" is-config="true" duration-ms="6250" started-at="2022-01-02T16:01:12 IST" finished-at="2022-01-02T16:01:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.CucumberRunner@fe18270]" name="runScenario" duration-ms="883" started-at="2022-01-02T16:01:19 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-01-02T16:01:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login using valid credentials multiple data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Login functionality of leaftaps application]"]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"link text","selector":"CRM/SFA"}
  (Session info: chrome=96.0.4664.110)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'LAPTOP-BL99EMON', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_271'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7c7fd056b60a24ebfed456ac6fadb327, findElement {using=link text, value=CRM/SFA}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.110, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\garla\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:52687}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52687/devtoo..., se:cdpVersion: 96.0.4664.110, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 7c7fd056b60a24ebfed456ac6fadb327]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"link text","selector":"CRM/SFA"}
  (Session info: chrome=96.0.4664.110)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.0.0', revision: '3a21814679'
System info: host: 'LAPTOP-BL99EMON', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_271'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7c7fd056b60a24ebfed456ac6fadb327, findElement {using=link text, value=CRM/SFA}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.110, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\garla\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:52687}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:52687/devtoo..., se:cdpVersion: 96.0.4664.110, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 7c7fd056b60a24ebfed456ac6fadb327
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:383)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:375)
at steps.StepDefenition.verifyHomepage(StepDefenition.java:51)
at ✽.Homepage is displayed(file:///C:/Users/garla/git/SeleniumPractice/SeleniumPractice/src/test/java/features/Login.feature:22)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="after()[pri:0, instance:runner.CucumberRunner@fe18270]" name="after" is-config="true" duration-ms="307" started-at="2022-01-02T16:01:20 IST" finished-at="2022-01-02T16:01:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.CucumberRunner@fe18270]" name="tearDownClass" is-config="true" duration-ms="2896" started-at="2022-01-02T16:01:20 IST" finished-at="2022-01-02T16:01:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.CucumberRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
